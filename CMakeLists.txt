cmake_minimum_required(VERSION 3.31) # Specify minimum CMake version

set(CMAKE_SYSTEM_NAME Generic)

set(CMAKE_CROSSCOMPILING TRUE)

set(CMAKE_C_COMPILER /usr/bin/sdcc)
set(CMAKE_ASM_COMPILER /usr/bin/sdas8051)
set(CMAKE_ASM_LINKER /usr/bin/sdld)
set(CMAKE_OBJCOPY /usr/bin/sdobjcopy CACHE INTERNAL "objcopy tool")
set(CMAKE_PACKIHX packihx CACHE INTERNAL "packihx tool")

set(CMAKE_STATIC_LIBRARY_PREFIX "")
set(CMAKE_STATIC_LIBRARY_SUFFIX ".lib")
set(CMAKE_SHARED_LIBRARY_PREFIX "")
set(CMAKE_SHARED_LIBRARY_SUFFIX ".lib")
set(CMAKE_IMPORT_LIBRARY_PREFIX )
set(CMAKE_IMPORT_LIBRARY_SUFFIX )
set(CMAKE_EXECUTABLE_SUFFIX ".hex")
set(CMAKE_LINK_LIBRARY_SUFFIX ".lib")
set(CMAKE_DL_LIBS "")
set(CMAKE_C_OUTPUT_EXTENSION .rel)
set(CMAKE_ASM_OUTPUT_EXTENSION .rel)
set(CMAKE_C_OUTPUT_EXTENSION_REPLACE 1)
set(CMAKE_ASM_OUTPUT_EXTENSION_REPLACE 1)

get_filename_component(SDCC_LOCATION "${CMAKE_C_COMPILER}" PATH)
find_program(SDCCLIB_EXECUTABLE sdar PATHS "${SDCC_LOCATION}" NO_DEFAULT_PATH)
find_program(SDCCLIB_EXECUTABLE sdar)
set(CMAKE_AR "${SDCCLIB_EXECUTABLE}" CACHE FILEPATH "The sdcc librarian" FORCE)

if(NOT DEFINED CMAKE_C_FLAGS_INIT)
    set(CMAKE_C_FLAGS_INIT "")
endif()

if(NOT DEFINED CMAKE_ASM_FLAGS_INIT)
    set(CMAKE_ASM_FLAGS_INIT "")
endif()

set(CMAKE_ASM_FLAGS "-lso")


if(NOT DEFINED CMAKE_EXE_LINKER_FLAGS_INIT)
    set (CMAKE_EXE_LINKER_FLAGS_INIT "")
endif()

set(CMAKE_ASM_LINK_FLAGS "-niumwx")

set(CMAKE_C_COMPILE_OBJECT  "<CMAKE_C_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -o <OBJECT> -c <SOURCE>")
set(CMAKE_C_LINK_EXECUTABLE "<CMAKE_C_COMPILER> <FLAGS> <OBJECTS> --out-fmt-ihx -o  <TARGET> <CMAKE_C_LINK_FLAGS> <LINK_FLAGS> <LINK_LIBRARIES>")
set(CMAKE_ASM_COMPILE_OBJECT  "<CMAKE_ASM_COMPILER> <FLAGS> <OBJECT> <SOURCE>")
set(CMAKE_ASM_LINK_EXECUTABLE "${CMAKE_ASM_LINKER} <CMAKE_ASM_LINK_FLAGS> <TARGET> <OBJECTS>")


set(CMAKE_C_CREATE_STATIC_LIBRARY
        "\"${CMAKE_COMMAND}\" -E remove <TARGET>"
        "<CMAKE_AR> -r <TARGET> <LINK_FLAGS> <OBJECTS> ")

set(CMAKE_C_CREATE_SHARED_LIBRARY "")
set(CMAKE_C_CREATE_MODULE_LIBRARY "")

function(ihx_to_hex bin)
    add_custom_command(TARGET ${bin} POST_BUILD COMMAND  packihx ${bin}.ihx > ${bin}.hex)
endfunction(ihx_to_hex)

project(stc15lib C ASM) # Define project name and language

add_subdirectory("src")

